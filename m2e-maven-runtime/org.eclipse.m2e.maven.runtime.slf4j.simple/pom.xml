<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2013, 2021 Igor Fedorenko and others
	All rights reserved. This program and the accompanying materials
	are made available under the terms of the Eclipse Public License 2.0
	which accompanies this distribution, and is available at
	https://www.eclipse.org/legal/epl-2.0/

	SPDX-License-Identifier: EPL-2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.m2e</groupId>
		<artifactId>m2e-maven-runtime</artifactId>
		<version>1.16.0-SNAPSHOT</version>
	</parent>

	<artifactId>org.eclipse.m2e.maven.runtime.slf4j.simple</artifactId>
	<version>1.18.1-SNAPSHOT</version>
	<packaging>eclipse-plugin</packaging>

	<name>M2E SLF4J-Simple Binding for Embedded Maven Runtime</name>

	<properties>
		<slf4j-simple.version>1.7.30</slf4j-simple.version>
	</properties>

	<description>
  This bundle provides SLF4j implementation and configuration required to run m2e embedded Maven runtime
  in external JVM. This bundle is NOT a general purpose slf4j-simple OSGi bundle, it does NOT export
  any packages and it CANNOT be used as an OSGI SLF4J implementation.

  This is suboptimal and a better solution would be to either include slf4j-simple as a resource in
  org.eclipse.m2e.maven.runtime or use SLF4J implementation of the running m2e instance. I could not
  find an easy way to implement either of the better solutions, so this one will have to do for now. 

  This bundle is referenced as Require-Bundle by org.eclipse.m2e.maven.runtime to force installation
  of this bundle whenever m2e embedded maven runtime is installed. Because no packages are exported,
  this does not pollute OSGi classpath. Provide-Capability/Require-Capability would be cleaner, but
  I don't know if these are supported bu P2. 
  </description>
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j-simple.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
</project>
